"""
# Copyright belong MNI BIOINFO CORE (https://github.com/neurobioinfo)
# The pipeline is developed by Saeid Amiri (saeid.amiri@mcgill.ca)
"""

import os 
import pandas as pd

from segpy.segrun.segrun_family_wise_withoutCSQ_genotype_sole import segrun_family_wise_withoutCSQ_genotype_sole
from segpy.segrun.segrun_family_wise_withoutCSQ_genotype_more import segrun_family_wise_withoutCSQ_genotype_more
from segpy.segrun.segrun_family_wise_withCSQ_genotype_sole    import segrun_family_wise_withCSQ_genotype_sole
from segpy.segrun.segrun_family_wise_withCSQ_genotype_more    import segrun_family_wise_withCSQ_genotype_more


def run(mt,ped,outfolder,hl,vcffile,ncol=7,CSQ=True):
    """
    mt: the matrix table generated by Hail 
    ped: a pedigree file, this should file includes six columns: `familyid`, `individualid`, `parentalid`, `maternalid`, `sex` 
    outfolder: the folder that you want to save your output 
    hl: the breif of Hail
    vcffile: The annotated vcf file with VEP.  
    """

    if eval(str(str(CSQ)))==True: 
        try:
            ext = vcffile.split('.')[-1]
            prog = 'zcat' if ext == 'gz' or ext == 'bgz' else 'cat'
            cmd0 = f'{prog} {vcffile}|head -10000|grep "##INFO=<ID=CSQ"'
            # cmd0=f'grep "##INFO=<ID=CSQ"  {vcffile}'
            csqlabel=os.popen(cmd0).read().split("Format: ")[1].split('">')[0].split('|')
            csqlabel=[el+'_csq' for el in csqlabel]
            print("Segpy is processing on VCF with a CSQ annotation.")  
            run_with_CSQ(mt, ped, outfolder,hl, ncol,csqlabel)
        except IndexError as e:
            print("Error: Segpy can not exctract CSQ annotation from VCF") 
            # run_without_CSQ(mt, ped, outfolder,hl) 
    else:
            print("Segpy is processing on VCF without a CSQ annotation.") 
            run_without_CSQ(mt, ped, outfolder,hl) 

def run_with_CSQ(mt, ped, outfolder,hl, ncol,csqlabel):
        cmd_temp=f'cd {outfolder} ; mkdir -p temp'
        os.system(cmd_temp)     
        if len(pd.unique(ped.loc[:,'phenotype']))==1:
            print("The PED file contains sole phenotype.")
            segrun_family_wise_withCSQ_genotype_sole(mt, ped, outfolder,hl, ncol,csqlabel)
        else:    
            print("The PED file contains various phenotypes.")
            segrun_family_wise_withCSQ_genotype_more(mt, ped, outfolder,hl, ncol,csqlabel) 

def run_without_CSQ(mt, ped, outfolder,hl):
        cmd_temp=f'cd {outfolder} ; mkdir -p temp'
        os.system(cmd_temp)     
        if len(pd.unique(ped.loc[:,'phenotype']))==1:
            print("The PED file contains sole phenotype.")
            segrun_family_wise_withoutCSQ_genotype_sole(mt, ped, outfolder,hl)
        else:    
            print("The PED file contains various phenotypes.")
            segrun_family_wise_withoutCSQ_genotype_more(mt, ped, outfolder,hl) 


if __name__ == "__main__":
    run()
