"""
# Copyright belong MNI BIOINFO CORE (https://github.com/neurobioinfo)
# The pipeline is developed by Saeid Amiri (saeid.amiri@mcgill.ca)
"""

import os
import pandas as pd

from segpy.segrun.segrun_family_wise_whole    import segrun_family_wise_whole

def run(mt,ped,outfolder,hl,vcffile,ncol=7,CSQ=True,just_phenotype=True,info_required=[1,2,3,4,5,6,7,8]):
    """
    mt: the matrix table generated by Hail.
    ped: a pedigree file, this should file includes six columns: `familyid`, `individualid`, `parentalid`, `maternalid`, `sex`.
    outfolder: the folder that you want to save your output.
    hl: the breif of Hail.
    vcffile: the annotated vcf file with VEP.  
    ncol: number of info od CSQ proceed in heach run.
    just_phenotype: if a family has >0 samples with phenotype=2 (affected), then we want to process every variant for that family.
    info_required: require info from the file:
    1 Global affected
    2 Global unaffected
    3 family-wise
    4 phenotype-family-wise
    5 phenotype-family-wise and non-include
    6 phenotype-family-wise-multipe sample
    7 phenotype-family-wise-multipe sample and non-include
    """
    if eval(str(str(CSQ)))==True: 
        try:
            ext = vcffile.split('.')[-1]
            prog = 'zcat' if ext == 'gz' or ext == 'bgz' else 'cat'
            cmd0 = f'{prog} {vcffile}|head -10000|grep "##INFO=<ID=CSQ"'
            # cmd0=f'grep "##INFO=<ID=CSQ"  {vcffile}'
            csqlabel=os.popen(cmd0).read().split("Format: ")[1].split('">')[0].split('|')
            csqlabel=[el+'_csq' for el in csqlabel]
            print("Segpy is processing on VCF with a CSQ annotation.")  
            run_whole(mt, ped, outfolder,hl, ncol,csqlabel,just_phenotype,info_required)
        except IndexError as e:
            print("Error: Segpy can not exctract CSQ annotation from VCF") 
    else:
            print("Segpy is processing on VCF without a CSQ annotation.") 
            csqlabel=False
            run_whole(mt, ped, outfolder,hl, ncol,csqlabel,just_phenotype,info_required) 

def run_whole(mt, ped, outfolder,hl, ncol,csqlabel,just_phenotype,info_required):
        cmd_temp=f'cd {outfolder} ; mkdir -p temp'
        os.system(cmd_temp)     
        if len(pd.unique(ped.loc[:,'phenotype']))==1:
            print("The PED file contains sole phenotype.")
            segrun_family_wise_whole(mt, ped, outfolder,hl, ncol,csqlabel,just_phenotype,info_required)
        else:    
            print("The PED file contains various phenotypes.")
            segrun_family_wise_whole(mt, ped, outfolder,hl, ncol,csqlabel,just_phenotype,info_required)

if __name__ == "__main__":
    run()
